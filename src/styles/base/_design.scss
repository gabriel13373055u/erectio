/* -------------------------------------------------
   Design tokens & utilities
   -------------------------------------------------- */

@use 'sass:map';
@use 'sass:math';
@use 'sass:color';

/* --- mixin respond() --- */
@mixin respond($point, $type: min) {
	@if map.has-key($breakpoints, $point) {
		$value: map.get($breakpoints, $point);

		@if $type == max {
			@media (max-width: #{$value}) {
				@content;
			}
		} @else {
			@media (min-width: #{$value}) {
				@content;
			}
		}
	}
}

/**************************
 * Helper — px → rem       
 *************************/
/// Converts a pixel value (based on a 10‑px root) to rem.
/// @example rem(24) → 2.4rem
@function rem($px) {
	@return math.div($px, 10) * 1rem;
}

/* -------------------------------------------------
   Colours — base
   -------------------------------------------------- */
$color-white: #fefbf9;
$color-black: #1c1c1c;

$color-blue-500: #2974c5;
/* nowe – identyczny efekt */
$color-blue-600: color.adjust($color-blue-500, $lightness: -8%);
$color-blue-100: color.adjust($color-blue-500, $lightness: 42%);

$color-orange-500: #ff7a0d;

$color-gray-100: #f2f4f7;
$color-gray-200: #e5e7eb;
$color-gray-300: #cbd5e1;

/* -------------------------------------------------
   Colours — semantic
   -------------------------------------------------- */
$color-primary: $color-blue-500;
$color-primary-hover: $color-blue-600;
$color-accent: $color-orange-500;
$color-bg: $color-white;
$color-text: $color-black;
$color-border: rgba($color-black, 0.1);

/* -------------------------------------------------
   Typography
   -------------------------------------------------- */
$font-main: 'Open Sans', sans-serif;
$font-heading: 'Montserrat', sans-serif;

$fs-xxs: rem(14); // 1.4rem
$fs-xs: rem(15); // 1.5rem
$fs-sm: rem(16); // 1.6rem – base paragraph
$fs-h4: rem(18); // 1.8rem
$fs-h3: rem(24); // 2.4rem
$fs-h2: rem(32); // 3.2rem
$fs-h1: rem(44); // 4.4rem

$lh-s: 1.2;
$lh-m: 1.4;
$lh-l: 1.5;

/* -------------------------------------------------
   Spacing & radius
   -------------------------------------------------- */
$gap-xs: rem(8); // 0.8rem
$gap-s: rem(16); // 1.6rem
$gap-m: rem(24); // 2.4rem
$gap-l: rem(32); // 3.2rem
$gap-xl: rem(48); // 4.8rem

$radius-s: rem(4); // 0.4rem
$radius-m: rem(8); // 0.8rem
$radius-l: rem(12); // 1.2rem

/* -------------------------------------------------
   Breakpoints
   -------------------------------------------------- */
$breakpoints: (
	mobile: 31.9rem,
	// 319 px
	tablet: 74.3rem,
	// 743 px
	desktop: 120rem // 1200 px,,,,,,,,,,,,,
);

$hover: '(hover: hover) and (pointer: fine)';
$mobile: '(min-width: 31.9rem) and (max-width: 74.2rem)';
$tablet: '(min-width: 74.3rem) and (max-width: 119.9rem)';
$desktop: '(min-width: 120rem)';

/* -------------------------------------------------
   Mixin — respond()
   @include respond(tablet) { … }   // min‑width
   @include respond(mobile, max) { … } // max‑width
   -------------------------------------------------- */
@mixin respond($point, $type: min) {
	@if map.has-key($breakpoints, $point) {
		$value: map.get($breakpoints, $point);

		@if $type == max {
			@media (max-width: #{$value}) {
				@content;
			}
		} @else {
			@media (min-width: #{$value}) {
				@content;
			}
		}
	}
}

/* -------------------------------------------------
   Export as CSS custom properties
   -------------------------------------------------- */
:root {
	/* colours */
	--color-primary: #{$color-primary};
	--color-primary-hover: #{$color-primary-hover};
	--color-accent: #{$color-accent};
	--color-bg: #{$color-bg};
	--color-text: #{$color-text};
	--color-border: #{$color-border};

	/* spacing & radius */
	--gap-xs: #{$gap-xs};
	--gap-s: #{$gap-s};
	--gap-normal: #{$gap-m};
	--gap-l: #{$gap-l};
	--gap-xl: #{$gap-xl};

	--radius-s: #{$radius-s};
	--radius-m: #{$radius-m};
	--radius-l: #{$radius-l};

	/* typography */
	--fs-xxs: #{$fs-xxs};
	--fs-xs: #{$fs-xs};
	--fs-sm: #{$fs-sm};
	--fs-h4: #{$fs-h4};
	--fs-h3: #{$fs-h3};
	--fs-h2: #{$fs-h2};
	--fs-h1: #{$fs-h1};

	--lh-s: #{$lh-s};
	--lh-m: #{$lh-m};
	--lh-l: #{$lh-l};
}

/* Update values depending on viewport width */
@media #{$mobile} {
	:root {
		--gap-normal: #{$gap-s};
	}
}
@media #{$tablet} {
	:root {
		--gap-normal: #{$gap-m};
	}
}
@media #{$desktop} {
	:root {
		--gap-normal: #{$gap-l};
	}
}
